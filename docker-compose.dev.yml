# Copyright (c) Brand.Me, Inc. All rights reserved.
#
# Brand.Me - Development Docker Compose
# ======================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: brandme-postgres
    environment:
      POSTGRES_DB: brandme_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NATS JetStream
  nats:
    image: nats:2.10-alpine
    container_name: brandme-nats
    command: ["-js", "-sd", "/data"]
    ports:
      - "4222:4222"  # Client
      - "8222:8222"  # HTTP monitoring
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "nats", "server", "check"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Gateway Service
  gateway:
    build:
      context: ./brandme-gateway
      dockerfile: Dockerfile
    container_name: brandme-gateway
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - ENVIRONMENT=development
      - NATS_URL=nats://nats:4222
      - DEFAULT_REGION=us-east1
      - LOG_LEVEL=debug
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID:-dev-client-id}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET:-dev-client-secret}
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-min-32-characters-long}
      - CORS_ORIGINS=http://localhost:3002
    depends_on:
      nats:
        condition: service_healthy
    volumes:
      - ./brandme-gateway/src:/app/src
    restart: unless-stopped

  # Core Services (AI Brain Hub, Policy & Safety, Orchestrator)
  # Uncomment when implemented
  # core:
  #   build:
  #     context: ./brandme-core
  #     dockerfile: Dockerfile
  #   container_name: brandme-core
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/brandme_dev
  #     - NATS_URL=nats://nats:4222
  #     - REGION_DEFAULT=us-east1
  #   depends_on:
  #     - postgres
  #     - nats
  #   volumes:
  #     - ./brandme-core/src:/app/src
  #   restart: unless-stopped

  # Agent Services (Identity, Knowledge, Compliance & Audit)
  # Uncomment when implemented
  # agents:
  #   build:
  #     context: ./brandme-agents
  #     dockerfile: Dockerfile
  #   container_name: brandme-agents
  #   ports:
  #     - "8001:8001"
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/brandme_dev
  #     - NATS_URL=nats://nats:4222
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./brandme-agents/src:/app/src
  #   restart: unless-stopped

  # Chain Service (Cardano + Midnight TX Builder)
  # Uncomment when implemented
  # chain:
  #   build:
  #     context: ./brandme-chain
  #     dockerfile: Dockerfile
  #   container_name: brandme-chain
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - PORT=3001
  #     - ENVIRONMENT=development
  #   volumes:
  #     - ./brandme-chain/src:/app/src
  #   restart: unless-stopped

  # Console (Next.js Frontend)
  # Uncomment when implemented
  # console:
  #   build:
  #     context: ./brandme-console
  #     dockerfile: Dockerfile
  #   container_name: brandme-console
  #   ports:
  #     - "3002:3002"
  #   environment:
  #     - NEXT_PUBLIC_GATEWAY_URL=http://localhost:3000
  #     - NEXT_PUBLIC_ENVIRONMENT=development
  #   volumes:
  #     - ./brandme-console:/app
  #     - /app/node_modules
  #     - /app/.next
  #   restart: unless-stopped

volumes:
  postgres_data:
  nats_data:
