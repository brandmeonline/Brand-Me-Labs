# Brand.Me v7 â€” Stable Integrity Spine
# Docker Compose for local development and testing

version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: brandme-postgres
    environment:
      POSTGRES_USER: brandme
      POSTGRES_PASSWORD: brandme
      POSTGRES_DB: brandme
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brandme"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - brandme_net

  brain:
    build:
      context: .
      dockerfile: brandme-core/brain/Dockerfile
    container_name: brandme-brain
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
      policy:
        condition: service_started
      orchestrator:
        condition: service_started
    ports:
      - "8000:8000"
    networks:
      - brandme_net

  policy:
    build:
      context: .
      dockerfile: brandme-core/policy/Dockerfile
    container_name: brandme-policy
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
      identity:
        condition: service_started
    ports:
      - "8001:8001"
    networks:
      - brandme_net

  orchestrator:
    build:
      context: .
      dockerfile: brandme-core/orchestrator/Dockerfile
    container_name: brandme-orchestrator
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
      knowledge:
        condition: service_started
      compliance:
        condition: service_started
    ports:
      - "8002:8002"
    networks:
      - brandme_net

  knowledge:
    build:
      context: .
      dockerfile: brandme-agents/knowledge/Dockerfile
    container_name: brandme-knowledge
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8003:8003"
    networks:
      - brandme_net

  compliance:
    build:
      context: .
      dockerfile: brandme-agents/compliance/Dockerfile
    container_name: brandme-compliance
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8004:8004"
    networks:
      - brandme_net

  identity:
    build:
      context: .
      dockerfile: brandme-agents/identity/Dockerfile
    container_name: brandme-identity
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8005:8005"
    networks:
      - brandme_net

  governance_console:
    build:
      context: .
      dockerfile: brandme-governance/governance_console/Dockerfile
    container_name: brandme-governance
    environment:
      DATABASE_URL: postgresql://brandme:brandme@postgres:5432/brandme
      REGION_DEFAULT: us-east1
    depends_on:
      postgres:
        condition: service_healthy
      compliance:
        condition: service_started
    ports:
      - "8006:8006"
    networks:
      - brandme_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 10s
      timeout: 5s
      retries: 30

volumes:
  pgdata:

networks:
  brandme_net:
    driver: bridge
