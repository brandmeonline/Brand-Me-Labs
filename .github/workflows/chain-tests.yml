# Copyright (c) Brand.Me, Inc. All rights reserved.
#
# Chain Service Tests Workflow
# ============================
# Automated testing for brandme-chain service

name: Chain Service Tests

on:
  push:
    branches: ['main', 'develop']
    paths:
      - 'brandme-chain/**'
      - '.github/workflows/chain-tests.yml'
  pull_request:
    branches: ['main', 'develop']
    paths:
      - 'brandme-chain/**'
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: brandme-chain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: brandme-chain/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm lint

      - name: Run type check
        run: pnpm type-check

      - name: Run unit tests
        run: pnpm test:coverage
        env:
          NODE_ENV: test
          CARDANO_FALLBACK_MODE: true
          MIDNIGHT_FALLBACK_MODE: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./brandme-chain/coverage/coverage-final.json
          flags: chain-service
          name: brandme-chain

      - name: Archive coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: brandme-chain/coverage/

  integration-tests:
    name: Integration Tests (Cardano Testnet)
    runs-on: ubuntu-latest
    # Only run integration tests on main branch or manually
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: brandme-chain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: brandme-chain/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create test wallet mnemonic
        run: |
          mkdir -p /tmp/test-wallet
          echo "${{ secrets.CARDANO_TEST_MNEMONIC }}" > /tmp/test-wallet/mnemonic.txt
          chmod 600 /tmp/test-wallet/mnemonic.txt

      - name: Run integration tests
        run: INTEGRATION=true pnpm test:integration
        env:
          NODE_ENV: test
          CARDANO_NETWORK: preprod
          CARDANO_MNEMONIC_PATH: /tmp/test-wallet/mnemonic.txt
          BLOCKFROST_API_KEY: ${{ secrets.BLOCKFROST_API_KEY_PREPROD }}
          CARDANO_FALLBACK_MODE: false
          MIDNIGHT_FALLBACK_MODE: true
        timeout-minutes: 15

      - name: Cleanup wallet
        if: always()
        run: rm -rf /tmp/test-wallet

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: brandme-chain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: brandme-chain/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build service
        run: pnpm build

      - name: Check build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build failed: dist directory not found"
            exit 1
          fi
          echo "✅ Build successful"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: brandme-chain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: brandme-chain/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pnpm audit
        run: pnpm audit --audit-level=high
        continue-on-error: true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./brandme-chain
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
